- name: Gitlab configuration
  hosts: gitlab

  vars_files:
    - vars.yml

  tasks:

    - name: Install packages
      apt:
        pkg:
          - curl
          - openssh-server
          - ca-certificates
          - tzdata
          - perl
          - python3-pip
        update_cache: yes
      become: yes

    - name: Add Gitlab package repository
      shell: curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | bash
      become: yes

    - name: Wait 10 seconds after adding gitlab package
      wait_for:
        timeout: 10

    - name: Install Gitlab package
      apt:
        pkg:
          - gitlab-ce
        update_cache: yes
      environment:
        EXTERNAL_URL: "http://{{ ansible_ssh_host }}"
        GITLAB_ROOT_PASSWORD: "{{ gitlab_root_pass }}"
      become: yes

    - name: Wait for a Gitlab boot
      shell: gitlab-ctl status
      register: shell_res
      delay: 30
      until: shell_res.stdout_lines | reject('search','^run') | list | count == 0
      become: yes

    - name: Install pip module 'gitlab'
      pip:
        name:
          - python-gitlab

    - name: Create a Gitlab group
      community.general.gitlab_group:
        validate_certs: false
        api_url: "http://{{ ansible_ssh_host }}"
        api_username: root
        api_password: "{{ gitlab_root_pass }}"
        name: "{{ group_name }}"
        path: "{{ group_name }}"
        visibility: public
        state: present

    - name: Create Gitlab project in created group
      community.general.gitlab_project:
        api_url: "http://{{ ansible_ssh_host }}"
        validate_certs: false
        api_username: root
        api_password: "{{ gitlab_root_pass }}"
        name: "{{ proj_name }}"
        group: "{{ group_name }}"
        issues_enabled: false
        snippets_enabled: true
        initialize_with_readme: false
        #default_branch: main
        visibility: public
        state: present

    - name: Check if repo is already exist
      ansible.builtin.stat:
        path: /var/TTGFinder
      register: proj_folder

    - name: Clone a repo from GitHub
      ansible.builtin.git:
        repo: https://github.com/ATAS-Digital/TTGFinder.git
        dest: /var/TTGFinder
      become: yes
      when: not proj_folder.stat.exists

    - name: Copy git script
      copy:
        src: "gitlab/{{ item }}"
        dest: /var
        mode: +x
        remote_src: false
      with_items:
        - "git-prepare.sh"
        - "ch-dir.sh"
      become: yes

    # - name: "Push repo to Gitlab with the fllowing command"
    #   ansible.builtin.pause:
    #     prompt: '/var/git-prepare.sh -link http://{{ ansible_ssh_host }}/{{ group_name }}/{{ proj_name }}.git'

    - name: Push repo to Gitlab
      expect:
        command: "/var/git-prepare.sh -link http://{{ ansible_ssh_host }}/{{ group_name }}/{{ proj_name }}.git"
        chdir: /var
        responses:
          Username *: "root"
          Password *: "{{ gitlab_root_pass }}"
        timeout: 60
      become: yes

# ----------------- Add Promtail agent for Loki monitoring ------------------ #
    # - name: Check folder for Promtail config is exists
    #   ansible.builtin.file:
    #     path: /srv/promtail
    #     mode: 0777
    #     state: directory
    #   become: yes

    # - name: Copy my promtail config to server
    #   copy:
    #     src: "loki/promtail-agent.yml"
    #     dest: "/srv/promtail"
    #     remote_src: false
    
    # - ansible.builtin.import_tasks:
    #     file: docker-install.yml
    #   become: yes

    # - name: Create promtail container
    #   community.docker.docker_container:
    #     name: promtail
    #     restart_policy: unless-stopped
    #     image: grafana/promtail:2.9.2
    #     etc_hosts:
    #       loki.my: "{{ hostvars['monitor']['ansible_host'] }}"
    #     volumes:
    #       - /srv/promtail/promtail-agent.yml:/etc/promtail/promtail.yml
    #       - /grafana_main_data:/var/lib/grafana
    #       - /var/log:/var/log
    #     command: --config.file=/etc/promtail/promtail.yml
    #   become: yes
# ----------------- ... ---------------- #
    
    # - name: Check if repo is already exist
    #   ansible.builtin.stat:
    #     path: /opt/TTGFinder
    #   register: proj_folder

    # - name: Clone a repo from GitHub
    #   ansible.builtin.git:
    #     repo: https://github.com/ATAS-Digital/TTGFinder.git
    #     dest: /opt/TTGFinder
    #   become: yes
    #   when: not proj_folder.stat.exists

# TODO: добавить копирование .gitlab-ci.yml в репозиторий
    
    # - name: Push repo to Gitlab manually (via script in /opt)
    #   ansible.builtin.pause:
    #     minutes: 2

# TODO: установить gitlab-runner на этот сервер GitLab'а

    # - name: Create ssh key pair for using git
    #   community.crypto.openssh_keypair:
    #     path: "{{ path_to_store_git_ssh_keys }}"
    #     type: ed25519
    #     state: present
    #   register: ssh_key_pair

    # # - name: Deploy an ssh key for project
    # #   community.general.gitlab_deploy_key:
    # #     api_url: "http://{{ hostvars['gitlab']['ansible_host'] }}"
    # #     api_username: root
    # #     api_password: "{{ gitlab_root_pass }}"
    # #     project: "{{ group_name }}/{{ proj_name }}"
    # #     title: "{{ ssh_key_title }}"
    # #     state: present
    # #     can_push: true
    # #     key: "{{ ssh_key_pair.public_key | string }}"

    # # - name: Copy git script
    # #   copy:
    # #     src: gitlab/git-prepare.sh
    # #     dest: /opt
    # #     mode: +x
    # #     remote_src: false
    # #   become: yes
    
    # # - name: Copy ch-dir script
    # #   copy:
    # #     src: gitlab/ch-dir.sh
    # #     dest: /opt
    # #     mode: +x
    # #     remote_src: false
    # #   become: yes

    # - name: Push repo to Gitlab
    #   shell: '/opt/git-prepare.sh -link http://root:{{ gitlab_root_pass }}@{{ ansible_ssh_host }}/TTGFinder_group/TTGFinder.git'
    #   args:
    #     chdir: /opt
    #   become: yes


