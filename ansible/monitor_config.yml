- name: Configuring monitoring server
  hosts: monitor
  become: yes

  vars_files:
    - vars.yml

  tasks:

    - name: Install packages
      apt:
        pkg:
          - python3-apt

    - ansible.builtin.import_tasks:
        file: docker-install.yml

# ----------------- Prometheus ------------------ #

    - name: Create folder /srv/prometheus if not exist
      file:
        path: /srv/prometheus
        mode: 0777
        state: directory

    - name: Copy my Prometheus config to server
      copy:
        src: "prometheus/prometheus.yml"
        dest: "/srv/prometheus"
        remote_src: false

    - name: Create Prometheus container
      community.docker.docker_container:
        name: prometheus
        restart_policy: unless-stopped
        image: prom/prometheus:main
        etc_hosts:
          prod.docker: "{{ hostvars['prod']['ansible_host'] }}"
        volumes:
          - /srv/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
          - /prometheus_main_data:/prometheus
        command: >
          --config.file=/etc/prometheus/prometheus.yml
          --storage.tsdb.path=/prometheus
          --web.console.libraries=/etc/prometheus/console_libraries
          --web.console.templates=/etc/prometheus/consoles
          --web.enable-lifecycle
        user: "root"
        published_ports: "9999:9090"

# ----------------- Grafana ------------------ #
    - name: Create folder /srv/grafana if not exist
      file:
        path: /srv/grafana
        mode: 0777
        state: directory 

    - name: Copy Grafana files to server
      ansible.builtin.copy:
        src: "grafana/"
        dest: /srv/grafana
        remote_src: false

    - name: Build custom Grafana image
      shell: docker build . -t my-grafana:latest
      args:
        chdir: /srv/grafana

    - name: Create Grafana container
      community.docker.docker_container:
        name: grafana
        restart_policy: unless-stopped
        image: my-grafana:latest
        etc_hosts:
          monitor.my: "{{ hostvars['monitor']['ansible_host'] }}"
        user: "0"
        published_ports: "3000:3000"

    - name: Now you need to connect Prometheus to Grafana manually
      ansible.builtin.pause:
        prompt: "Grafana on monitoring server is available here: http://{{ hostvars['monitor']['ansible_host'] }}:3000/d/XI1YeOHGk/system-and-docker-monitoring"
        seconds: 30
